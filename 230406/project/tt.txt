#include <stdio.h>
#include <ncurses.h>
#include <locale.h>
#include <unistd.h>

#define N 7
char map[N][N + 1] = {
    "#######",
    "#  M  #",
    "#^##  #",
    "#     #",
    "#   ###",
    "#    Y#",
    "#######",
};

int ny = 1;
int nx = 1;

int hp = 100;

void print()
{
    clear();
    for (int y = 0; y < N; y++)
    {
        for (int x = 0; x < N; x++)
        {
            if (y == ny && x == nx)
            {
                printw("@");
            }
            else
            {
                printw("%c", map[y][x]);
            }
        }
        printw("\n");
    }
    printw("HP : %d\n", hp);
    refresh();
}

int main()
{
    setlocale(LC_CTYPE, "ko_KR.utf8");
    initscr();

    nodelay(stdscr, TRUE);
    keypad(stdscr, TRUE);

    while (1)
    {
        print();
        int ch = getch();
        if (ch == ERR)
            ch = 0;

        if (ch == KEY_LEFT)
        {
            if (map[ny][nx - 1] != '#')
                nx--;
            if (map[ny][nx] == '^')
                hp -= 10;
        }
        if (ch == KEY_RIGHT)
        {
            if (map[ny][nx + 1] != '#')
                nx++;
            if (map[ny][nx] == '^')
                hp -= 10;
        }
        if (ch == KEY_UP)
        {
            if (map[ny - 1][nx] != '#')
                ny--;
            if (map[ny][nx] == '^')
                hp -= 10;
        }
        if (ch == KEY_DOWN)
        {
            if (map[ny + 1][nx] != '#')
                ny++;
            if (map[ny][nx] == '^')
                hp -= 10;
        }

        if (map[ny][nx] == 'M' || hp == 0)
        {
            print();
            usleep(500 * 1000);
            clear();
            mvprintw(10, 30, "GAME OVER");
            refresh();
            sleep(1);
            break;
        }
        if (map[ny][nx] == 'Y')
        {
            print();
            usleep(500 * 1000);
            clear();
            mvprintw(10, 30, "WIN");
            refresh();
            sleep(1);
            break;
        }
    }

    getch();
    endwin();
    return 0;
}